{"version":3,"file":"static/js/659.3d9c8fa9.chunk.js","mappings":"0JACA,MAA2B,2BAA3B,EAAsE,gCAAtE,EAAsH,gCAAtH,EAAuK,iC,6ECK1JA,EAAgB,WAC3B,MCAsB,WACtB,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAeC,EAAAA,EAAAA,IAAYC,EAAAA,GAEjC,GAA0BC,EAAAA,EAAAA,UAA2BH,GAArD,eAAOI,EAAP,KAAcC,EAAd,KAQA,OANAC,EAAAA,EAAAA,kBAAgB,WACdC,EAAAA,EAAAA,gBAAyBH,GAAOI,MAAK,WACnCV,GAASW,EAAAA,EAAAA,KACV,GACF,GAAE,CAACL,IAEG,CAAEA,MAAAA,EAAOC,SAAAA,EACjB,CDb6BK,GAApBN,EAAR,EAAQA,MAAOC,EAAf,EAAeA,SACf,OACE,iBACEM,UAAWC,EACXC,QAAS,WAELR,EADY,SAAVD,EACO,QAEA,OAEZ,EARH,WAUE,yCACA,gBAAKO,UAAWC,EAAhB,SACa,SAAVR,GACC,iCACE,SAAC,MAAD,CAAUU,KAAM,MAChB,uCAGF,iCACE,SAAC,MAAD,CAAWA,KAAM,MACjB,2CAMX,EErBD,EAViB,WACf,OACE,gBAAKH,UAAWC,EAAhB,UACE,gBAAKD,UAAWC,EAAhB,UACE,SAACf,EAAD,OAIP,C","sources":["webpack://social-net/./src/views/components/Settings/Settings.module.scss?e95e","views/components/Settings/ThemeSwitcher.tsx","views/hooks/useTheme.ts","views/components/Settings/Settings.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"settings\":\"Settings_settings__gBVDi\",\"settingsTablo\":\"Settings_settingsTablo__pXgk6\",\"themeSwitcher\":\"Settings_themeSwitcher__xfA5j\",\"buttonSwitcher\":\"Settings_buttonSwitcher__kfDCl\"};","import styles from './Settings.module.scss'\n\nimport { IoMdSunny, IoMdMoon } from 'react-icons/io'\n\nimport { useTheme } from '../../hooks/useTheme'\n\nexport const ThemeSwitcher = () => {\n  const { theme, setTheme } = useTheme()\n  return (\n    <div\n      className={styles.themeSwitcher}\n      onClick={() => {\n        if (theme === 'dark') {\n          setTheme('light')\n        } else {\n          setTheme('dark')\n        }\n      }}\n    >\n      <span>App theme</span>\n      <div className={styles.buttonSwitcher}>\n        {theme === 'dark' ? (\n          <>\n            <IoMdMoon size={25} />\n            <span>Dark</span>\n          </>\n        ) : (\n          <>\n            <IoMdSunny size={25} />\n            <span>Light</span>\n          </>\n        )}\n      </div>\n    </div>\n  )\n}\n","import { useState, useLayoutEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { themeAPI } from '../../dal/localForage'\nimport { selectAppTheme } from '../../redux/ducks/app/selectors'\nimport { setAppTheme } from '../../redux/ducks/app/operations'\n\nexport const useTheme = () => {\n  const dispatch = useDispatch()\n  const defaultTheme = useSelector(selectAppTheme)\n\n  const [theme, setTheme] = useState<'light' | 'dark'>(defaultTheme)\n\n  useLayoutEffect(() => {\n    themeAPI.setAppThemeToLF(theme).then(() => {\n      dispatch(setAppTheme())\n    })\n  }, [theme])\n\n  return { theme, setTheme }\n}\n","import styles from './Settings.module.scss'\n\nimport { ThemeSwitcher } from './ThemeSwitcher'\n\nconst Settings = () => {\n  return (\n    <div className={styles.settings}>\n      <div className={styles.settingsTablo}>\n        <ThemeSwitcher />\n      </div>\n    </div>\n  )\n}\n\nexport default Settings\n"],"names":["ThemeSwitcher","dispatch","useDispatch","defaultTheme","useSelector","selectAppTheme","useState","theme","setTheme","useLayoutEffect","themeAPI","then","setAppTheme","useTheme","className","styles","onClick","size"],"sourceRoot":""}