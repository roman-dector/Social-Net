{"version":3,"file":"static/js/587.78a88e84.chunk.js","mappings":"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","sources":["webpack://social-net/./src/views/components/Login/LoginForm.module.scss?17a3","views/validationSchemas/validationFields.js","views/components/Login/LoginForm.tsx","webpack://social-net/./src/views/components/Music/Music.module.scss?7eac","redux/ducks/music/selectors.ts","webpack://social-net/./src/views/components/Music/RightPanel/PlayControl/PlayControl.module.scss?822a","views/components/Music/RightPanel/PlayControl/PlayControl.tsx","views/components/Music/RightPanel/RightPanel.tsx","webpack://social-net/./src/views/components/Music/LeftPanel/LeftPanel.module.scss?9b2a","views/components/Music/LeftPanel/AddMusicPopup.tsx","views/components/Music/LeftPanel/LeftPanel.tsx","views/components/Music/Music.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"loginFormContainer\":\"LoginForm_loginFormContainer__lGv0-\",\"email\":\"LoginForm_email__wKrxY\",\"password\":\"LoginForm_password__ar8G6\",\"rememberMe\":\"LoginForm_rememberMe__BLxLx\",\"submit\":\"LoginForm_submit__6RQ3W\",\"fieldError\":\"LoginForm_fieldError__89AQx\",\"formErrorContainer\":\"LoginForm_formErrorContainer__0t0mA\",\"formError\":\"LoginForm_formError__t01At\",\"captcha\":\"LoginForm_captcha__f-btY\",\"captchaImgContainer\":\"LoginForm_captchaImgContainer__Ls2P3\"};","import * as yup from 'yup';\n\nconst validate = {\n  emailRequired: () => yup.string().email().required(),\n\n  passRequired: length => yup.string().min(parseInt(length)).required(),\n};\n\nexport { validate };\n","import styles from './LoginForm.module.scss'\n\nimport { FC, useState } from 'react'\nimport { FieldError, SubmitHandler, useForm } from 'react-hook-form'\nimport { yupResolver } from '@hookform/resolvers/yup'\nimport * as yup from 'yup'\n\nimport { validate } from '../../validationSchemas/validationFields'\nimport { LoginDataType } from '../../../redux/ducks/auth/types'\nimport {\n  WrongCredentialsError,\n  WrongCaptchaError,\n} from '../../../dal/apiErrors'\nimport { AppThunk } from '../../../redux/store'\n\nconst validationSchema = yup.object({\n  email: validate.emailRequired(),\n  password: validate.passRequired(4),\n})\n\ntype LoginFormPropsType = {\n  isAuthenticating: boolean\n  captchaUrl: string | null\n  setIsAuthenticating: (status: boolean) => void\n  login: (\n    data: LoginDataType\n  ) => Promise<void | WrongCaptchaError | WrongCredentialsError>\n}\n\nconst LoginForm: FC<LoginFormPropsType> = props => {\n  const {\n    register,\n    handleSubmit,\n    formState: { errors, touchedFields },\n  } = useForm<LoginDataType>({\n    mode: 'onChange',\n    resolver: yupResolver(validationSchema),\n  })\n\n  let [formError, setFormError] = useState({ type: '', message: '' })\n\n  const onSubmit: SubmitHandler<LoginDataType> = data => {\n    props.setIsAuthenticating(true)\n    props\n      .login(data)\n      .then(() => {\n        setFormError({ type: '', message: '' })\n      })\n      .catch(e => {\n        setFormError({ type: 'server', message: e.message })\n      })\n      .then(() => {\n        props.setIsAuthenticating(false)\n      })\n  }\n  return (\n    <div className={styles.loginFormContainer}>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <div className={styles.email}>\n          <label>Email:</label>\n          <input {...register('email')} />\n          <FieldErrorMessage\n            error={errors.email}\n            touched={touchedFields.email}\n          />\n        </div>\n\n        <div className={styles.password}>\n          <label>Password:</label>\n          <input {...register('password')} type={'password'} />\n          <FieldErrorMessage\n            error={errors.password}\n            touched={touchedFields.password}\n          />\n        </div>\n\n        <div className={styles.rememberMe}>\n          <input {...register('rememberMe')} type={'checkbox'} />\n          <label>remember me</label>\n        </div>\n\n        {!props.captchaUrl ? null : (\n          <div className={styles.captcha}>\n            <div className={styles.captchaImgContainer}>\n              <img src={props.captchaUrl} alt='captcha image' />\n            </div>\n            <input {...register('captcha')} />\n          </div>\n        )}\n\n        <FormErrorMessage error={formError} />\n\n        <div className={styles.submit}>\n          <button type='submit' disabled={props.isAuthenticating}>\n            Log In\n          </button>\n        </div>\n      </form>\n    </div>\n  )\n}\n\ntype FormErrorType = {\n  type: string\n  message: string\n}\n\nexport const FieldErrorMessage = ({\n  error,\n  touched,\n  style\n}: {\n  error?: FieldError\n  touched?: boolean\n  style?: Object\n}) => {\n  if (error && touched) {\n    let errorMessage = error.message?.split(' ').splice(1).join(' ')\n    return <p style={style ? style : {}} className={styles.fieldError}>{errorMessage}</p>\n  } else return null\n}\n\nexport const FormErrorMessage = ({ error, style }: { error: FormErrorType, style?: Object }) => {\n  return error.message ? (\n    <div className={styles.formErrorContainer}>\n      <p style={style ? style : {}} className={styles.formError}>{error.message}</p>\n    </div>\n  ) : null\n}\n\nexport default LoginForm\n","// extracted by mini-css-extract-plugin\nexport default {\"musicPage\":\"Music_musicPage__aApb7\"};","import { RootState } from '../../store'\n\nexport const selectMusicList = (state: RootState) =>\n  state.musicState.musicList\n","// extracted by mini-css-extract-plugin\nexport default {\"playControl\":\"PlayControl_playControl__G+Ux4\"};","import styles from './PlayControl.module.scss'\n\nimport { FC } from 'react'\nimport { MusicItem } from '../../../../../redux/ducks/music/types'\n\nexport const PlayControl: FC<{ musicItem: MusicItem | null }> = props => {\n  let audioImg = 'https://via.placeholder.com/150'\n  let audioName = 'Select track to play'\n  let audioUrl = ''\n\n  if (props.musicItem) {\n    audioImg = props.musicItem.pictureUrl\n      ? props.musicItem.pictureUrl\n      : 'https://via.placeholder.com/150'\n\n    audioName = props.musicItem.name\n    audioUrl = props.musicItem.audioUrl\n  }\n\n  return (\n    <div className={styles.playControl}>\n      <img src={audioImg} />\n\n      <span>{audioName}</span>\n\n      <audio\n        src={audioUrl}\n        controls\n        autoPlay\n        onAbort={() => console.log('The end!')}\n      />\n\n      <div className={styles.musicQueue}></div>\n    </div>\n  )\n}\n","import { FC } from 'react'\nimport { MusicItem } from '../../../../redux/ducks/music/types'\n\nimport { PlayControl } from './PlayControl/PlayControl'\n\nexport const RightPanel: FC<{ currentMusicItem: MusicItem | null }> = props => {\n  return (\n    <div>\n      <PlayControl musicItem={props.currentMusicItem} />\n    </div>\n  )\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"leftPanel\":\"LeftPanel_leftPanel__w1twK\",\"musicList_empty\":\"LeftPanel_musicList_empty__ZhYZf\",\"musicList\":\"LeftPanel_musicList__iNy+F\",\"songPreview\":\"LeftPanel_songPreview__raqZJ\",\"songPic\":\"LeftPanel_songPic__n5ilR\",\"songName\":\"LeftPanel_songName__SNYxp\",\"songManageMenu\":\"LeftPanel_songManageMenu__aZS03\",\"addMusicButton\":\"LeftPanel_addMusicButton__Mxf3B\",\"addMusicButton_hovered\":\"LeftPanel_addMusicButton_hovered__JRdva\",\"addMusicPopup\":\"LeftPanel_addMusicPopup__0BJMz\",\"addMusicPopupForm\":\"LeftPanel_addMusicPopupForm__NM2CR\",\"nameContainer\":\"LeftPanel_nameContainer__0vJns\",\"filesDropzone\":\"LeftPanel_filesDropzone__TDnb4\",\"FileInput\":\"LeftPanel_FileInput__-msMR\",\"buttons\":\"LeftPanel_buttons__nC9+k\"};","import styles from './LeftPanel.module.scss'\n\nimport * as yup from 'yup'\n\nimport {\n  FC,\n  useState,\n  Dispatch,\n  SetStateAction,\n  createContext,\n  useContext,\n} from 'react'\nimport { useForm, UseFormRegister } from 'react-hook-form'\nimport { yupResolver } from '@hookform/resolvers/yup'\nimport {\n  FieldErrorMessage,\n  FormErrorMessage,\n} from '../../../components/Login/LoginForm'\n\nimport { saveMusicFile } from '../../../../redux/ducks/music/operations'\nimport { useDispatch } from 'react-redux'\n\ntype DropzoneFileType = {\n  name: string\n  file: File | null\n}\n\nconst DropzoneContext = createContext<any>(null)\n\ntype AddMusicPopupDataType = {\n  songName: string\n}\n\nexport const AddMusicPopup: FC<{\n  setIsActive: Dispatch<SetStateAction<boolean>>\n}> = props => {\n  const dispatch = useDispatch()\n\n  const {\n    register,\n    handleSubmit,\n    setValue,\n    formState: { errors, touchedFields },\n  } = useForm<AddMusicPopupDataType>({\n    resolver: yupResolver(yup.object({ songName: yup.string().required() })),\n    mode: 'onSubmit',\n  })\n\n  const [formError, setFormError] = useState({ type: '', message: '' })\n  const [audioFile, setAudioFile] = useState<DropzoneFileType>({\n    name: '',\n    file: null,\n  })\n\n  const [pictureFile, setPictureFile] = useState<DropzoneFileType>({\n    name: '',\n    file: null,\n  })\n\n  const onSubmit = (data: AddMusicPopupDataType) => {\n    if (!audioFile.file) {\n      setFormError({\n        type: 'AudioNotFound',\n        message: 'You should add some audio',\n      })\n    } else {\n      dispatch(saveMusicFile(data.songName, audioFile.file, pictureFile.file))\n      setFormError({ type: '', message: '' })\n      setValue('songName', '')\n      setAudioFile({ name: '', file: null })\n      setPictureFile({ name: '', file: null })\n    }\n  }\n\n  return (\n    <div className={styles.addMusicPopup}>\n      <form\n        className={styles.addMusicPopupForm}\n        onSubmit={handleSubmit(onSubmit)}\n      >\n        <div className={styles.nameContainer}>\n          <label>Name:</label>\n          <input {...register('songName')} type={'text'} />\n          <FieldErrorMessage\n            error={errors.songName}\n            touched={touchedFields.songName}\n            style={{ color: 'red' }}\n          />\n        </div>\n\n        <DropzoneContext.Provider\n          value={{\n            audioFile,\n            pictureFile,\n            setAudioFile,\n            setPictureFile,\n            setFormError,\n          }}\n        >\n          <Dropzone register={register} />\n        </DropzoneContext.Provider>\n\n        <FormErrorMessage error={formError} style={{ color: 'red' }} />\n\n        <div className={styles.buttons}>\n          <input\n            type={'button'}\n            value={'Close'}\n            onClick={() => {\n              props.setIsActive(false)\n            }}\n          />\n          <input type={'submit'} value={'Accept'} />\n        </div>\n      </form>\n    </div>\n  )\n}\n\nconst Dropzone: FC<{\n  register: UseFormRegister<AddMusicPopupDataType>\n}> = props => {\n  const context = useContext(DropzoneContext)\n\n  return (\n    <div className={styles.filesDropzone}>\n      <div>\n        <label>Audio file:</label>\n        <FileInput\n          setFile={context.setAudioFile}\n          fileName={context.audioFile.name}\n          acceptedFiles={['audio/mpeg']}\n        />\n      </div>\n\n      <div>\n        <label>Picture:</label>\n        <FileInput\n          setFile={context.setPictureFile}\n          fileName={context.pictureFile.name}\n          acceptedFiles={['image/jpeg', 'image/png']}\n        />\n      </div>\n    </div>\n  )\n}\n\nconst FileInput: FC<{\n  setFile: Dispatch<SetStateAction<DropzoneFileType>>\n  fileName: string\n  acceptedFiles: string[]\n}> = props => {\n  const [mediaError, setMediaError] = useState('')\n  const [isDragActive, setIsDragActive] = useState(false)\n\n  const dragStartHandler = (e: React.DragEvent<HTMLDivElement>) => {\n    e.preventDefault()\n    setIsDragActive(true)\n  }\n\n  const dragEndHandler = (e: React.DragEvent<HTMLDivElement>) => {\n    e.preventDefault()\n    setIsDragActive(false)\n  }\n\n  const onDropHandler = (e: React.DragEvent<HTMLDivElement>) => {\n    e.preventDefault()\n    const file = e.dataTransfer.files[0]\n\n    if (props.acceptedFiles.includes(file.type)) {\n      props.setFile({ name: file.name, file })\n      setMediaError('')\n    } else {\n      setMediaError('Incorrect file type')\n    }\n\n    setIsDragActive(false)\n  }\n\n  const onSelectFile = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const files = e.target.files\n\n    if (files?.length) {\n      const file = files[0]\n\n      if (props.acceptedFiles.includes(file.type)) {\n        props.setFile({ name: file.name, file: file })\n        e.target.value = ''\n        setMediaError('')\n      } else {\n        setMediaError('Incorrect file type')\n      }\n    }\n  }\n\n  let inputText\n\n  if (mediaError) {\n    inputText = <span style={{ color: 'red' }}>{mediaError}</span>\n  } else if (props.fileName) {\n    inputText = props.fileName\n  } else {\n    inputText = (\n      <>\n        Drop here\n        <br />\n        Click to select\n      </>\n    )\n  }\n\n  return (\n    <div\n      className={styles.FileInput}\n      onDragStart={dragStartHandler}\n      onDragOver={dragStartHandler}\n      onDragEnd={dragEndHandler}\n      onDrop={onDropHandler}\n    >\n      <label>\n        <input type={'file'} onChange={onSelectFile} />\n        <span>{inputText}</span>\n      </label>\n    </div>\n  )\n}\n","import styles from './LeftPanel.module.scss'\n\nimport { MusicItem } from '../../../../redux/ducks/music/types'\n\nimport { FC, useState, useContext } from 'react'\n\nimport { BsFillTrashFill } from 'react-icons/bs'\nimport { BiAddToQueue } from 'react-icons/bi'\n\nimport { AddMusicPopup } from './AddMusicPopup'\nimport { LeftPanelContext } from '../Music'\nimport { useDispatch } from 'react-redux'\n\nimport { removeMusicItem } from '../../../../redux/ducks/music/operations'\n\nexport const LeftPanel: FC<{ musicList: MusicItem[] }> = props => {\n  return (\n    <div className={styles.leftPanel}>\n      <AddMusicButton />\n      <MusicList musicList={props.musicList} />\n    </div>\n  )\n}\n\nconst MusicList: FC<{ musicList: MusicItem[] }> = props => {\n  return props.musicList.length ? (\n    <div className={styles.musicList}>\n      {props.musicList.map(item => (\n        <SongPreview key={item.id} musicItem={item} />\n      ))}\n    </div>\n  ) : (\n    <div className={styles.musicList_empty}>\n      You don't have any music here,\n      <br />\n      just click \"Add music\" button.\n    </div>\n  )\n}\n\nconst SongPreview: FC<{ musicItem: MusicItem }> = props => {\n  const dispatch = useDispatch()\n  const setCurrentMusicItem = useContext(LeftPanelContext)\n\n  const onClickHandler = () => {\n    if (setCurrentMusicItem) {\n      setCurrentMusicItem(props.musicItem)\n    }\n  }\n\n  let audioImg = 'https://via.placeholder.com/150'\n\n  if (props.musicItem.pictureUrl) {\n    audioImg = props.musicItem.pictureUrl\n  }\n\n  return (\n    <div\n      id={`${props.musicItem.id}`}\n      className={styles.songPreview}\n      onClick={onClickHandler}\n    >\n      <div>\n        <img src={audioImg} className={styles.songPic} />\n        <span className={styles.songName}>{props.musicItem.name}</span>\n      </div>\n\n      <div className={styles.songManageMenu}>\n        <BiAddToQueue />\n        <BsFillTrashFill\n          onClick={e => {\n            e.stopPropagation()\n\n            const musicItemId = Number(\n              e.currentTarget.parentElement?.parentElement?.getAttribute('id')\n            )\n            dispatch(removeMusicItem(musicItemId))\n          }}\n        />\n      </div>\n    </div>\n  )\n}\n\nexport const AddMusicButton: FC<{}> = props => {\n  const [isActive, setIsActive] = useState(false)\n  const [hovered, setHovered] = useState(false)\n\n  return (\n    <>\n      <div\n        className={\n          hovered ? styles.addMusicButton_hovered : styles.addMusicButton\n        }\n        onClick={() => {\n          setIsActive(true)\n        }}\n        onMouseOver={() => setHovered(true)}\n        onMouseOut={() => setHovered(false)}\n      >\n        {hovered ? (\n          <svg width='20' height='20' xmlns='http://www.w3.org/2000/svg'>\n            <rect width='6' height='20' x='7' rx='2' />\n            <rect width='20' height='6' y='7' rx='2' />\n          </svg>\n        ) : (\n          <span>Add music</span>\n        )}\n      </div>\n      {isActive ? <AddMusicPopup setIsActive={setIsActive} /> : null}\n    </>\n  )\n}\n","import styles from './Music.module.scss'\n\nimport {\n  FC,\n  useEffect,\n  useState,\n  createContext,\n  Dispatch,\n  SetStateAction,\n} from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { getMusicList } from '../../../redux/ducks/music/operations'\nimport { selectMusicList } from '../../../redux/ducks/music/selectors'\nimport { RightPanel } from './RightPanel/RightPanel'\nimport { LeftPanel } from './LeftPanel/LeftPanel'\nimport { MusicItem } from '../../../redux/ducks/music/types'\n\nexport const LeftPanelContext = createContext<Dispatch<\n  SetStateAction<MusicItem | null>\n> | null>(null)\n\nconst Music: FC<{}> = () => {\n  const dispatch = useDispatch()\n\n  const [currentMusicItem, setCurrentMusicItem] = useState<MusicItem | null>(\n    null\n  )\n\n  const musicList = useSelector(selectMusicList)\n\n  useEffect(() => {\n    dispatch(getMusicList())\n  }, [])\n\n  return (\n    <div className={styles.musicPage}>\n      <LeftPanelContext.Provider value={setCurrentMusicItem}>\n        <LeftPanel musicList={musicList} />\n      </LeftPanelContext.Provider>\n      <RightPanel currentMusicItem={currentMusicItem} />\n    </div>\n  )\n}\n\nexport default Music\n"],"names":["validate","yup","email","required","length","min","parseInt","validationSchema","password","FieldErrorMessage","error","touched","style","errorMessage","message","split","splice","join","className","styles","FormErrorMessage","props","useForm","mode","resolver","yupResolver","register","handleSubmit","formState","errors","touchedFields","useState","type","formError","setFormError","onSubmit","data","setIsAuthenticating","login","then","catch","e","captchaUrl","src","alt","disabled","isAuthenticating","selectMusicList","state","musicState","musicList","PlayControl","audioImg","audioName","audioUrl","musicItem","pictureUrl","name","controls","autoPlay","onAbort","console","log","RightPanel","currentMusicItem","DropzoneContext","createContext","AddMusicPopup","dispatch","useDispatch","songName","setValue","file","audioFile","setAudioFile","pictureFile","setPictureFile","saveMusicFile","color","Provider","value","Dropzone","onClick","setIsActive","context","useContext","FileInput","setFile","fileName","acceptedFiles","inputText","mediaError","setMediaError","setIsDragActive","dragStartHandler","preventDefault","onDragStart","onDragOver","onDragEnd","onDrop","dataTransfer","files","includes","onChange","target","LeftPanel","AddMusicButton","MusicList","map","item","SongPreview","id","setCurrentMusicItem","LeftPanelContext","stopPropagation","musicItemId","Number","currentTarget","parentElement","getAttribute","removeMusicItem","isActive","hovered","setHovered","onMouseOver","onMouseOut","width","height","xmlns","x","rx","y","useSelector","useEffect","getMusicList"],"sourceRoot":""}